From 9fe17363df472b75ec9dc479fe50c84bd4fcea85 Mon Sep 17 00:00:00 2001
From: Dawid Kurek <dawid.kurek@displaylink.com>
Date: Tue, 28 Feb 2017 11:07:49 +0100
Subject: [PATCH] Fix compilation with post 4.10 kernels

---
 module/evdi_drv.h     |  9 +++++++++
 module/evdi_fb.c      | 13 +++++++++++++
 module/evdi_gem.c     | 10 ++++++++++
 module/evdi_main.c    |  7 +++++++
 module/evdi_painter.c | 16 ++++++++++++----
 5 files changed, 51 insertions(+), 4 deletions(-)

diff --git a/module/evdi_drv.h b/module/evdi_drv.h
index 3cd3851..7916379 100644
--- a/module/evdi_drv.h
+++ b/module/evdi_drv.h
@@ -77,7 +77,11 @@ int evdi_connector_init(struct drm_device *dev, struct drm_encoder *encoder);
 struct drm_encoder *evdi_encoder_init(struct drm_device *dev);

 int evdi_driver_load(struct drm_device *dev, unsigned long flags);
+#if KERNEL_VERSION(4, 11, 0) > LINUX_VERSION_CODE
 int evdi_driver_unload(struct drm_device *dev);
+#else
+void evdi_driver_unload(struct drm_device *dev);
+#endif
 void evdi_driver_preclose(struct drm_device *dev, struct drm_file *file_priv);

 #ifdef CONFIG_COMPAT
@@ -112,7 +116,12 @@ struct dma_buf *evdi_gem_prime_export(struct drm_device *dev,
 int evdi_gem_vmap(struct evdi_gem_object *obj);
 void evdi_gem_vunmap(struct evdi_gem_object *obj);
 int evdi_drm_gem_mmap(struct file *filp, struct vm_area_struct *vma);
+
+#if KERNEL_VERSION(4, 11, 0) > LINUX_VERSION_CODE
 int evdi_gem_fault(struct vm_area_struct *vma, struct vm_fault *vmf);
+#else
+int evdi_gem_fault(struct vm_fault *vmf);
+#endif

 void evdi_stats_init(struct evdi_device *evdi);
 void evdi_stats_cleanup(struct evdi_device *evdi);
diff --git a/module/evdi_fb.c b/module/evdi_fb.c
index 88d824b..023bd1b 100644
--- a/module/evdi_fb.c
+++ b/module/evdi_fb.c
@@ -308,7 +308,11 @@ evdi_framebuffer_init(struct drm_device *dev,
 		      struct evdi_gem_object *obj)
 {
 	ufb->obj = obj;
+#if KERNEL_VERSION(4, 11, 0) > LINUX_VERSION_CODE
 	drm_helper_mode_fill_fb_struct(&ufb->base, mode_cmd);
+#else
+	drm_helper_mode_fill_fb_struct(dev, &ufb->base, mode_cmd);
+#endif
 	return drm_framebuffer_init(dev, &ufb->base, &evdifb_funcs);
 }

@@ -377,7 +381,11 @@ static int evdifb_create(struct drm_fb_helper *helper,

 	info->flags = FBINFO_DEFAULT | FBINFO_CAN_FORCE_OUTPUT;
 	info->fbops = &evdifb_ops;
+#if KERNEL_VERSION(4, 11, 0) > LINUX_VERSION_CODE
 	drm_fb_helper_fill_fix(info, fb->pitches[0], fb->depth);
+#else
+	drm_fb_helper_fill_fix(info, fb->pitches[0], fb->format->depth);
+#endif
 	drm_fb_helper_fill_var(info, &ufbdev->helper, sizes->fb_width,
 			       sizes->fb_height);

@@ -439,7 +447,12 @@ int evdi_fbdev_init(struct drm_device *dev)
 	ufbdev->helper.funcs = &evdi_fb_helper_funcs;
 #endif

+#if KERNEL_VERSION(4, 11, 0) > LINUX_VERSION_CODE
 	ret = drm_fb_helper_init(dev, &ufbdev->helper, 1, 1);
+#else
+	ret = drm_fb_helper_init(dev, &ufbdev->helper, 1);
+#endif
+
 	if (ret) {
 		kfree(ufbdev);
 		return ret;
diff --git a/module/evdi_gem.c b/module/evdi_gem.c
index 6957643..538a824 100644
--- a/module/evdi_gem.c
+++ b/module/evdi_gem.c
@@ -12,6 +12,9 @@
 #include <linux/shmem_fs.h>
 #include <linux/dma-buf.h>
 #include <linux/version.h>
+#if KERNEL_VERSION(4, 11, 0) <= LINUX_VERSION_CODE
+#include <drm/drm_cache.h>
+#endif

 struct evdi_gem_object *evdi_gem_alloc_object(struct drm_device *dev,
 					      size_t size)
@@ -78,8 +81,15 @@ int evdi_drm_gem_mmap(struct file *filp, struct vm_area_struct *vma)
 	return ret;
 }

+#if KERNEL_VERSION(4, 11, 0) <= LINUX_VERSION_CODE
+int evdi_gem_fault(struct vm_fault *vmf)
+{
+	struct vm_area_struct *vma = vmf->vma;
+#else
 int evdi_gem_fault(struct vm_area_struct *vma, struct vm_fault *vmf)
 {
+#endif
+
 	struct evdi_gem_object *obj = to_evdi_bo(vma->vm_private_data);
 	struct page *page;
 	unsigned int page_offset;
diff --git a/module/evdi_main.c b/module/evdi_main.c
index 88cf90b..30865e4 100644
--- a/module/evdi_main.c
+++ b/module/evdi_main.c
@@ -71,7 +71,11 @@ int evdi_driver_load(struct drm_device *dev,
 	return ret;
 }

+#if KERNEL_VERSION(4, 11, 0) > LINUX_VERSION_CODE
 int evdi_driver_unload(struct drm_device *dev)
+#else
+void evdi_driver_unload(struct drm_device *dev)
+#endif
 {
 	struct evdi_device *evdi = dev->dev_private;

@@ -96,7 +100,10 @@ int evdi_driver_unload(struct drm_device *dev)
 	evdi_modeset_cleanup(dev);

 	kfree(evdi);
+
+#if KERNEL_VERSION(4, 11, 0) > LINUX_VERSION_CODE
 	return 0;
+#endif
 }

 void evdi_driver_preclose(struct drm_device *drm_dev, struct drm_file *file)
diff --git a/module/evdi_painter.c b/module/evdi_painter.c
index d2415ee..824b62b 100644
--- a/module/evdi_painter.c
+++ b/module/evdi_painter.c
@@ -370,16 +370,24 @@ void evdi_painter_mode_changed_notify(struct evdi_device *evdi,
 {
 	struct evdi_painter *painter = evdi->painter;

+#if KERNEL_VERSION(4, 11, 0) > LINUX_VERSION_CODE
+	int bits_per_pixel = fb->bits_per_pixel;
+	uint32_t pixel_format = fb->pixel_format;
+#else
+	int bits_per_pixel = fb->format->cpp[0] * 8;
+	uint32_t pixel_format = fb->format->format;
+#endif
+
 	EVDI_DEBUG(
 		"(dev=%d) Notifying mode changed: %dx%d@%d; bpp %d; ",
 		evdi->dev_index, new_mode->hdisplay, new_mode->vdisplay,
-		drm_mode_vrefresh(new_mode), fb->bits_per_pixel);
-	EVDI_DEBUG("pixel format %d\n", fb->pixel_format);
+		drm_mode_vrefresh(new_mode), bits_per_pixel);
+	EVDI_DEBUG("pixel format %d\n", pixel_format);

 	evdi_painter_send_mode_changed(painter,
 				       new_mode,
-				       fb->bits_per_pixel,
-				       fb->pixel_format);
+				       bits_per_pixel,
+				       pixel_format);
 }

 int